library(dplyr)
library(forecast)
library(lubridate)
library(wesanderson)
library(scales)
library(rugarch)
dados <- as_data_frame(read.table(file="~/Documents/Research/Miscelania/MyFitnessPal/data.csv", sep=",", header=TRUE))
dados <- dados %>%
select(-Calories)
dim(dados)
str(dados)
dados$Date <- ymd(dados$Date)
dados$Year  <- year(dados$Date)
dados$Month <- month(dados$Date)
dados$Day   <- day(dados$Date)
dados$GrupoDiaSemana <- wday(dados$Date, label=TRUE)
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência"), method="loess", se=TRUE, span=.25) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência 1"), method="loess", se=FALSE, span=.25) +
geom_smooth(aes(y=Weight, colour="Tendência 2"), method="loess", se=FALSE, span=2) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência 1"), method="loess", se=FALSE, span=.25) +
geom_smooth(aes(y=Weight, colour="Tendência 2"), method="loess", se=FALSE, span=2) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência 1"), method="loess", se=FALSE, span=0.25) +
geom_smooth(aes(y=Weight, colour="Tendência 2"), method="loess", se=FALSE, span=0.5) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
dados$GrupoMes <- ymd(paste(dados$Year, dados$Month, "01", sep="-"))
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=GrupoDiaSemana, y=Weight, group=GrupoDiaSemana, fill=GrupoDiaSemana)) +
labs(x="Dia da Semana", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Dia da Semana", values=rep(wes_palette(3, name="Royal1"), 20)[1:length(unique(dados$GrupoDiaSemana))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
theme_bw()
dados %>%
arrange(Weight) %>%
print(n=20)
dados %>%
arrange(Weight) %>%
head(n=20) %>%
group_by(Year) %>%
count()
dados %>%
arrange(Weight) %>%
head(n=20) %>%
group_by(Year) %>%
count()
dados %>%
arrange(Weight) %>%
head(n=100) %>%
count(GrupoDiaSemana) %>%
arrange(n)
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=28) %>%
count(GrupoDiaSemana) %>%
arrange(n)
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=28) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
arrange(Weight) %>%
head(n=100) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
arrange(Weight) %>%
head(n=50) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=28)
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=20) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
filter(Year==2017) %>%
arrange(Weight) %>%
head(n=30) %>%
count(GrupoDiaSemana) %>%
arrange(desc(n))
dados %>%
arrange(Weight) %>%
print(n=20)
dados %>%
arrange(Weight) %>%
print(n=20) %>%
filter(Weight < 72)
dados$GrupoMes <- ymd(paste(dados$Year, dados$Month, "01", sep="-"))
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="2 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw()
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_bw()
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="3 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ajuste.arfima <- autoarfima(dados$Weight, ar.max=3, ma.max=3, method="full")
ajuste.arima <- auto.arima(dados$Weight, max.p=10, max.q=10, max.d=3, seasonal=TRUE, ic="aicc")
tsdiag(ajuste.arima)
plot(forecast(ajuste.arima, h=20))
ggplot(data=dados, aes(x=GrupoDiaSemana, y=Weight, group=GrupoDiaSemana, fill=GrupoDiaSemana)) +
labs(x="Dia da Semana", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Dia da Semana", values=rep(wes_palette(3, name="Royal1"), 20)[1:length(unique(dados$GrupoDiaSemana))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
theme_bw()
ajuste.arima <- auto.arima(dados$Weight, max.p=10, max.q=10, max.d=3, seasonal=TRUE, ic="aicc")
tsdiag(ajuste.arima)
plot(forecast(ajuste.arima, h=20))
dados <- as_data_frame(read.table(file="~/Documents/Research/Miscelania/MyFitnessPal/data.csv", sep=",", header=TRUE))
dados <- dados %>%
select(-Calories)
dim(dados)
str(dados)
dados$Date <- ymd(dados$Date)
dados$Year  <- year(dados$Date)
dados$Month <- month(dados$Date)
dados$Day   <- day(dados$Date)
dados$GrupoDiaSemana <- wday(dados$Date, label=TRUE)
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("Legenda", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=dados, aes(x=Date)) +
labs(x="Meses", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Tendência Longa"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Tendência Curta"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("", values = wes_palette("Zissou")[c(1, 3, 5)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dados$GrupoMes <- ymd(paste(dados$Year, dados$Month, "01", sep="-"))
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(5, name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=dados, aes(x=GrupoMes, y=Weight, group=GrupoMes, fill=as.factor(GrupoMes))) +
labs(x="Meses", y="Peso (kg)") +
geom_boxplot() +
scale_fill_manual("Meses", values=rep(wes_palette(c(1, 3, 5), name="Zissou"), 20)[1:length(unique(dados$GrupoMes))]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(ggplot2)
library(dplyr)
library(forecast)
library(lubridate)
library(wesanderson)
library(scales)
dados <- as_data_frame(read.table(file="~/Documents/Research/Miscelania/MyFitnessPal/data.csv", sep=",", header=TRUE))
dados <- dados %>%
select(-Calories)
dim(dados)
str(dados)
dados$Date           <- ymd(dados$Date)
dados$Year           <- year(dados$Date)
dados$Month          <- month(dados$Date)
dados$Day            <- day(dados$Date)
dados$GrupoDiaSemana <- wday(dados$Date, label=TRUE)
dados$GrupoMes       <- ymd(paste(dados$Year, dados$Month, "01", sep="-"))
ggplot(data=dados, aes(x=Date)) +
labs(x="Data", y="Peso (kg)") +
geom_line(aes(y=Weight, colour="Peso Real")) +
geom_smooth(aes(y=Weight, colour="Longo Prazo"), method="loess", se=FALSE, span=0.5) +
geom_smooth(aes(y=Weight, colour="Curto Prazo"), method="loess", se=FALSE, span=0.25) +
scale_colour_manual("", values = wes_palette("Zissou")[c(3, 5, 1)]) +
scale_y_continuous(breaks = round(seq(floor(min(dados$Weight)), ceiling(max(dados$Weight)), by=1), 1), limits=c(min(dados$Weight), max(dados$Weight))) +
scale_x_date(breaks=seq(min(dados$Date), max(dados$Date), by="1 month"), date_labels="%b/%Y", minor_breaks=seq(min(dados$Date), max(dados$Date), by="1 month")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(devtools)
install_github('slidify', 'ramnathv')
knit_engines()
knit_engines
library(knitr)
knit_engines
knit_engines$get()
mtcars
?mtcars
setwd("~/Documents/Research/Meetings/2017 Semana da Estatística UFRN/relatorio")
read.csv(file="features.csv", header=TRUE)
read.csv(file="BrFlights.csv", header=TRUE)
data(package="ggplot2")
Animals
data(Animals)
data(Animals, package=MASS)
data(Animals, package="MASS")
Animals
setwd("~/Documents/Research/Meetings/2017 Semana da Estatística UFRN/relatorio")
knitr::opts_chunk$set(echo = TRUE)
dim(animais)
animais <- read.csv(file="animais.csv")
dim(animais)
?kabble
library(knitr)
kable(animais)
Animals
?kable
g = cbind.data.frame(c, d$freq, e$freq)
colnames(g) = c("intervalo", "F", "M")
knitr::opts_chunk$set(echo = TRUE)
animais <- read.csv(file="animais.csv")
dim(animais)
library(knitr)
kable(animais, col.names=c("Animal", "Peso do Corpo (kg)", "Peso do Cérebro (g)"))
knitr::opts_chunk$set(echo = TRUE)
animais <- read.csv(file="animais.csv")
dim(animais)
?kable
kable(animais, col.names=c("Animal", "Peso do Corpo (kg)", "Peso do Cérebro (g)"), caption="\label{tab:animais} Pesos do corpo (em kg) e dos cérebros (em g) de 28 animais selecionados.")
kable(animais, col.names=c("Animal", "Peso do Corpo (kg)", "Peso do Cérebro (g)"), caption="\label{tab:animais} Pesos do corpo (em kg) e dos cérebros (em g) de 28 animais selecionados.")
kable(animais, col.names=c("Animal", "Peso do Corpo (kg)", "Peso do Cérebro (g)"), caption="\\label{tab:animais} Pesos do corpo (em kg) e dos cérebros (em g) de 28 animais selecionados.")
animais
iris
dados=data.frame(
y1=c(110,120,115,130,125),
y2=c(102,105,104,103,107))
dadosest=as.matrix(dados)
barras <- barplot(dadosest,ylim=c(0,150),beside=TRUE)
points(barras[,1],dados$y1)
points(barras[,2],dados$y2, pch=19)
lines(barras[,1],dados$y1)
lines(barras[,2],dados$y2, lty=2
barras <- barplot(dadosest,ylim=c(0,150),beside=TRUE)
points(barras[,1],dados$y1)
points(barras[,2],dados$y2, pch=19)
lines(barras[,1],dados$y1)
lines(barras[,2],dados$y2, lty=2)
dados <- data.frame(1:5, dados)
dados
dados=data.frame(
y1=c(110,120,115,130,125),
y2=c(102,105,104,103,107))
dadosest=as.matrix(dados)
barras <- barplot(dadosest,ylim=c(0,150),beside=TRUE)
points(barras[,1],dados$y1)
points(barras[,2],dados$y2, pch=19)
lines(barras[,1],dados$y1)
lines(barras[,2],dados$y2, lty=2)
dados <- data.frame(x=1:5, dados)
choose(12, 2)
library(igraph)
??igraph
?graph_from_adjacency_matrix
adjm <- matrix(sample(0:1, 100, replace=TRUE, prob=c(0.9,0.1)), nc=10)
g1 <- graph_from_adjacency_matrix( adjm )
plot(g1)
adjm
n <- 12
n <- 12
adjm       <- matrix(rep(1, n^2), ncol=n)
diag(adjm) <- 0
g1 <- graph_from_adjacency_matrix(adjm)
plot(g1)
g1 <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g1)
bdiag(matrix(1:4, 2), diag(3))
library(Matrix)
bdiag(matrix(1:4, 2), diag(3))
bdiag(matrix(1:4, 2), diag(1))
library(ggplot2)
library(dplyr)
library(forecast)
library(lubridate)
library(wesanderson)
library(scales)
dados <- as_data_frame(read.table(file="~/Documents/Research/Miscelania/MyFitnessPal/data.csv", sep=",", header=TRUE))
dados <- dados %>%
select(-Calories)
library(ggplot2)
library(dplyr)
library(forecast)
library(lubridate)
library(wesanderson)
library(scales)
dados <- as_data_frame(read.table(file="~/Documents/Research/Miscelania/MyFitnessPal/data.csv", sep=",", header=TRUE))
library(igraph)
n <- 12
adjm       <- matrix(rep(1, n^2), ncol=n)
diag(adjm) <- 0
g12 <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g12)
library(magic)
n    <- 4
adjm <- matrix(rep(1, n^2), ncol=n)
n    <- 6
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm)
g12  <- graph_from_adjacency_matrix(adjm, mode="undirected")
g6  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g6)
diag(adjm) <- 0
g6  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g6)
n    <- 4
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm)
diag(adjm) <- 0
g4  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g4)
adjm <- adiag(adjm, adjm, adjm)
diag(adjm) <- 0
n    <- 4
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm, adjm)
diag(adjm) <- 0
g4  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g4)
source('~/Desktop/stack.R')
plot(g12, title="4")
plot(g12, title=choose(n, 2))
plot(g12, title=5)
plot(g12, title="5")
plot(g12, main="5")
plot(g12, main=paste("Número total de jogos:", choose(n, 2)))
library(igraph)
library(magic)
?graph_from_adjacency_matrix
n <- 12
n <- 12
adjm       <- matrix(rep(1, n^2), ncol=n)
diag(adjm) <- 0
g12 <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g12, main=paste("Número total de jogos:", choose(n, 2)))
n    <- 6
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm)
diag(adjm) <- 0
plot(g12, main=paste("Número total de jogos:", 12/n*choose(n, 2)))
plot(g12, main=paste("Número total de jogos:", (12/n)*choose(n, 2)))
n <- 12
adjm       <- matrix(rep(1, n^2), ncol=n)
diag(adjm) <- 0
g12 <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g12, main=paste("Número total de jogos:", (12/n)*choose(n, 2)))
n    <- 6
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm)
diag(adjm) <- 0
g6  <- graph_from_adjacency_matrix(adjm, mode="undirected")
n    <- 6
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm)
diag(adjm) <- 0
g6  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g6, main=paste("Número total de jogos:", (12/n)*choose(n, 2)))
choose(n, 2)
n    <- 4
adjm <- matrix(rep(1, n^2), ncol=n)
adjm <- adiag(adjm, adjm, adjm)
diag(adjm) <- 0
g4  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g4, (12/n)*choose(n, 2))
g4  <- graph_from_adjacency_matrix(adjm, mode="undirected")
plot(g4, (12/n)*choose(n, 2))
plot(g4, main=(12/n)*choose(n, 2))
plot(g4, main=paste("Número total de jogos:", (12/n)*choose(n, 2)))
rbinom(100, p=0.5)
rbinom(100, size=1, p=0.5)
sum(rbinom(100, size=1, p=0.5))
rbinom(100, size=1, p=0.7)
diff(rbinom(100, size=1, p=0.7))
diff(cumsum(rbinom(100, size=1, p=0.7)))
rgeom(1, p=0.5)
rgeom(1, p=0.5)
rgeom(1, p=0.5)
rgeom(100, p=0.5)
rgeom(100, p=0.7)
rgeom(100, p=0.3)
rbinom(100000, size=1, p=0.7)
x <- rbinom(100000, size=1, p=0.7)
cumsum(x)
cumsum(x) == 17
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
x <- rbinom(100000, size=1, p=0.7)
which(cumsum(x) == 17)
